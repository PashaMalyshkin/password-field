{"version":3,"sources":["components/password-field/password-field.tsx","customHooks/useValidationPassword.ts","App.tsx","index.tsx"],"names":["PasswordField","useState","password","setPassword","showPassword","setShowPassword","inputType","hasValidLength","length","hasNumbers","test","hasLetters","hasSymbols","isPasswordStrong","isPasswordMedium","isPasswordWeak","useValidationPassword","className","type","name","value","placeholder","onChange","e","target","onClick","size","cn","red","yellow","green","App","ReactDOM","render","document","getElementById"],"mappings":"mOAKaA,EAAoB,WAC/B,MCJmC,WACnC,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAe,OAAS,WACpCG,EAAiBL,EAASM,QAAU,EAIpCC,EAHgB,OAGWC,KAAKR,GAChCS,EAHgB,iDAGWD,KAAKR,GAChCU,EAHgB,sKAGWF,KAAKR,GAChCW,EAAmBN,GAAkBE,GAAcG,GAAcD,EACjEG,EAAmBP,IAAmBM,IAAsBF,GAAcC,GACtED,GAAcF,GAAgBA,GAAcG,GAKtD,MAAO,CACLV,WACAC,cACAC,eACAC,kBACAC,YACAS,gBAVsBF,IACdC,GACDP,EASPO,mBACAD,mBACAN,kBDbES,GATFX,EADF,EACEA,gBACAD,EAFF,EAEEA,aACAF,EAHF,EAGEA,SACAa,EAJF,EAIEA,eACAD,EALF,EAKEA,iBACAD,EANF,EAMEA,iBACAP,EAPF,EAOEA,UACAH,EARF,EAQEA,YACAI,EATF,EASEA,eAGF,OACE,sBAAKU,UAAU,iBAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,uBAAMA,UAAU,uBAAhB,UAEE,uBACEC,KAAMZ,EACNa,KAAK,WACLF,UAAU,wBACVG,MAAOlB,EACPmB,YAAY,kBACZC,SAAU,SAACC,GAAD,OAAOpB,EAAYoB,EAAEC,OAAOJ,UAExC,wBACEF,KAAK,SACLD,UAAU,yBACVQ,QAAS,kBAAMpB,GAAiBD,IAHlC,SAKGA,EACC,cAAC,IAAD,CAAYsB,KAAM,KAElB,cAAC,IAAD,CAAiBA,KAAM,UAI7B,qBAAKT,UAAU,uBAAf,mBACMf,EAASM,OADf,gCAKF,sBAAKS,UAAU,oBAAf,UACE,qBAAKA,UAAWU,IACd,0BACA,CAAEC,IAAKb,IAAoBR,GAAkBL,GAC7C,CAAE2B,OAAQf,GACV,CAAEgB,MAAOjB,MAIX,qBAAKI,UAAWU,IACd,0BACA,CAAEE,OAAQf,GACV,CAAEc,KAAMrB,GAAkBL,GAC1B,CAAE4B,MAAOjB,MAIX,qBAAKI,UAAWU,IACd,0BACA,CAAEG,MAAOjB,GACT,CAAEe,KAAMrB,GAAkBL,GAC1B,CAAE4B,MAAOjB,aEjENkB,EAAgB,WAC3B,OACE,qBAAKd,UAAU,MAAf,SACE,cAAC,EAAD,OCFNe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.abc9ed47.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { PiEyeLight, PiEyeSlashLight } from 'react-icons/pi';\nimport cn from 'classnames';\nimport { useValidationPassword } from '../../customHooks/useValidationPassword';\n\nexport const PasswordField: FC = () => {\n  const {\n    setShowPassword,\n    showPassword,\n    password,\n    isPasswordWeak,\n    isPasswordMedium,\n    isPasswordStrong,\n    inputType,\n    setPassword,\n    hasValidLength,\n  } = useValidationPassword();\n\n  return (\n    <div className=\"password-field\">\n      <div className=\"password-field__container\">\n        <form className=\"password-field__form\">\n\n          <input\n            type={inputType}\n            name=\"password\"\n            className=\"password-field__input\"\n            value={password}\n            placeholder=\"Type a password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <button\n            type=\"button\"\n            className=\"password-field__button\"\n            onClick={() => setShowPassword(!showPassword)}\n          >\n            {showPassword ? (\n              <PiEyeLight size={24} />\n            ) : (\n              <PiEyeSlashLight size={24} />\n            )}\n          </button>\n        </form>\n        <div className=\"password-field__info\">\n          {`${password.length} characters containing:`}\n        </div>\n      </div>\n\n      <div className=\"password-strength\">\n        <div className={cn(\n          'password-strength__item',\n          { red: isPasswordWeak || (!hasValidLength && password) },\n          { yellow: isPasswordMedium },\n          { green: isPasswordStrong },\n        )}\n        >\n        </div>\n        <div className={cn(\n          'password-strength__item',\n          { yellow: isPasswordMedium },\n          { red: !hasValidLength && password },\n          { green: isPasswordStrong },\n        )}\n        >\n        </div>\n        <div className={cn(\n          'password-strength__item',\n          { green: isPasswordStrong },\n          { red: !hasValidLength && password },\n          { green: isPasswordStrong },\n        )}\n        >\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\n\nexport const useValidationPassword = () => {\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const inputType = showPassword ? 'text' : 'password';\n  const hasValidLength = password.length >= 8;\n  const numberPattern = /\\d+/g;\n  const letterPattern = /[а-яА-ЯЁёa-zA-Z]/;\n  const symbolPattern = /[^a-zA-Zа-яА-ЯЁёА-ЩЬЮЯЄІЇҐа-щьюяєіїґ0-9\\s]+/;\n  const hasNumbers = numberPattern.test(password);\n  const hasLetters = letterPattern.test(password);\n  const hasSymbols = symbolPattern.test(password);\n  const isPasswordStrong = hasValidLength && hasNumbers && hasSymbols && hasLetters;\n  const isPasswordMedium = hasValidLength && !isPasswordStrong && ((hasLetters && hasSymbols)\n        || (hasLetters && hasNumbers) || (hasNumbers && hasSymbols));\n  const isPasswordWeak = !isPasswordStrong\n        && !isPasswordMedium\n        && hasValidLength;\n\n  return {\n    password,\n    setPassword,\n    showPassword,\n    setShowPassword,\n    inputType,\n    isPasswordWeak,\n    isPasswordMedium,\n    isPasswordStrong,\n    hasValidLength,\n  };\n};\n","import React from 'react';\nimport './index.scss';\nimport { PasswordField } from './components/password-field';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"app\">\n      <PasswordField />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}